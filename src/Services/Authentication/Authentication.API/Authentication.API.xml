<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Authentication.API</name>
    </assembly>
    <members>
        <member name="M:Authentication.API.Controllers.AuthController.Register(Authentication.API.Models.RegisterModel)">
            <summary>
            Register new user
            </summary>
            <remarks>
            Sample request:
            
                POST /Register
                {
                   "username": "User1234"
                   "email": "User1234@email.com"
                   "password": "User1234$@"
                }
                
            </remarks>
            <param name="model"></param>
            <returns>The id of newly created user with message</returns>
            <response code="200">Returns the id of newly created user with message</response>
            <response code="400">If model is invalid</response>    
            <response code="401">If user with the same credentials exists</response> 
        </member>
        <member name="P:Authentication.API.Models.RegisterModel.Username">
            <summary>
            Username
            <para>Minimum length is 3</para>
            <example>User123</example>
            </summary>
        </member>
        <member name="P:Authentication.API.Models.RegisterModel.Email">
            <summary>
            Adress email
            <example>User123@gmail.com</example>
            </summary>
        </member>
        <member name="P:Authentication.API.Models.RegisterModel.Password">
            <summary>
            Password
            <para>Must contains one lower and one uppercase letter and one number</para>
            <para>Minimum length is 6</para>
            <example>User123@gmail.com</example>
            </summary>
        </member>
        <member name="P:Authentication.API.Models.RegisterModel.EmailConfirmationUrl">
            <summary>
            Url where user should be redirected when click email confirmation link
            <para>Example will redirect to https://www.mysite.com/emailConfirmation?token={token}</para>
            <para>Note: It will put the token at the end</para>
            <example>https://www.mysite.com/emailConfirmation?token=</example>
            </summary>
        </member>
        <member name="M:Authentication.API.Providers.IDateProvider.GetUtcNow">
            <summary>
            Get UTC now date
            </summary>
            <returns>UTC now date</returns>
        </member>
        <member name="M:Authentication.API.Providers.IDateProvider.GetAfterUtcNow(System.Int32,System.Int32)">
            <summary>
            Get UTC date after specified time
            </summary>
            <param name="days">How many days after</param>
            <param name="minutes">How many minutes after</param>
            <returns>UTC now with added days and minutes</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Throws when number of days is too big</exception>
        </member>
        <member name="M:Authentication.API.Publishers.IEmailPublisher.PublishEmailConfirmationAsync(Authentication.API.Dtos.PublishEmailConfirmationRequest)">
            <summary>
            Publish email confirmation
            </summary>
            <param name="request"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentException">Throws when request is null or has empty fields</exception>
        </member>
        <member name="M:Authentication.API.Publishers.IUserPublisher.PublishNewUserAsync(Authentication.API.Dtos.PublishNewUserRequest)">
            <summary>
            Publish newly created user
            </summary>
            <param name="request"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentException">Throws when request is null or has empty fields</exception>
        </member>
        <member name="M:Authentication.API.Services.IAuthService.RegisterAsync(Authentication.API.Dtos.RegisterRequest)">
            <summary>
            Register new valid user
            </summary>
            <param name="request"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentException">Throws when request properity is empty</exception>
            <exception cref="T:System.ArgumentNullException">Throws when request is null</exception>
        </member>
        <member name="M:Authentication.API.Services.ITokenService.CreateEmailConfirmationTokenAsync(System.Int32)">
            <summary>
            Create token for email confirmation
            </summary>
            <param name="userId"></param>
            <returns>Token</returns>
            <exception cref="T:System.ArgumentException">Throws when userId is 0 or user with that id not exists</exception>
        </member>
        <member name="M:Authentication.API.Services.ITokenService.IsValidEmailConfirmationTokenAsync(System.String)">
            <summary>
            Check if token for email confirmation is valid
            </summary>
            <param name="token"></param>
            <returns>True if token is valid otherwise false</returns>
            <exception cref="T:System.ArgumentException">Throws when token is null or empty</exception>
        </member>
        <member name="M:Authentication.API.Services.ITokenService.GetUserIdFromToken(System.String)">
            <summary>
            Get user id from token
            </summary>
            <param name="token"></param>
            <returns>User id if exists otherwise 0</returns>
        </member>
    </members>
</doc>
